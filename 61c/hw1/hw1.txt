Jonathan Manalus
CS61c-nm

a. True because SMP will perform at 100ns, whereas low-end PC-class server will be 100ns or more. Basically “workloads which have intensive communication patterns will perform significantly better in a 128 processor-core SMP than in an Ethernet-connected cluster of 32 four-core low-end servers.”(pg 32 WSC)

b. False because small cheaper computers are more cost efficient to buy when they break in the long run. (pg 31 WSC)

c. False you could have a PUE, but it would be incredibly on realistic, because it would mean the data center is consuming less power than that being consumed by the IT equipment it hosts. (source http://dimension85.com/EN/understanding-pue-measurement.html)


d. True, because “In a typical raised-floor datacenter, chillers consume the largest fraction of power overhead, typically 30– 50% of IT load. Computer room air conditioning (CRAC) units are next, consuming 10– 30% of IT load (mostly in fans), followed by the UPS system, consuming 7– 12% of critical power through AC– DC– AC conversion losses (relative losses are higher when the UPS is only lightly loaded). Other facility elements [humidifiers, power distribution units (PDUs), lighting] further contribute to higher PUE levels.” 

Source: Hölzle, Urs; Luiz André Barroso (2009-07-08). The Datacenter as a Computer: An Introduction to the Design of Warehouse-Scale Machines (pp. 48-49). Morgan & Claypool Publishers. Kindle Edition. 

e. True since from lecture 2 slides we see that power raises at a straight line and computing raises at a rate which eventually means the power.



Problem 2: MapReduce Questions





a. A combiner runs after the Mapper, and will receive all data emitted by the Mapper on a given node. Then sends the output to the reducers.


b. The keys must be the same for when going in and out of the combiner, because when the keys are sent to the combiner they are not immediately written to the output. So the keys need to be the same since when they’re sent to the reducer the reducer can find every unique key.


c. The combiner starts it’s work after the mapper has finished running, but it does run intermittently on the output of mapper after each spill.  

d. Yes it’s perfect for google search, because it can split the search up to quickly find search results.


e. Yes since when a worker fails and the data is then passed onto other works to complete the job.



Problem 3: MapReduce Programming
a.  I would have the Mapper which would look for correlation of known spam words and and the emails being received. It could also look for patterns in if all lot of email address are attached within the email.  


b. The map of the code would split the email into several chunks which would give them a them a key and value containing the chunk of words. 

c. The combiner would start gathering the output of my mapper and start putting them into memory to speed up. I would then have the output list be called to cross check with one spam word to see if we have any matches. 

d. The reducer would then process out anything that doesn’t look like spam words until the all we have left is what is know to be spam, and then mark that email as spam. 



Problem 4: Do in hw1.c
